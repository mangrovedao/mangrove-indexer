name: publish

on:
  push:
    branches:
      - master

  pull_request:
    types: [opened, synchronize]
    branches:
      - master
env:
  REPO_NAME: proxima.one/services
  TAG_PREFIX: mangrove-

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      releasedVersion: ${{ steps.push-image.outputs.RELEASED_VERSION }}
      releasedImage: ${{ steps.push-image.outputs.RELEASED_IMAGE }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: "Setup npm" # Add our registry to npm config
        run: |
          npm set @proxima-one:registry=https://npm.pkg.github.com
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.CI_NPM_TOKEN }}"

      - name: Install Dependencies
        run: yarn install

      - name: Test
        run: yarn test

      - name: Build Image
        run: |
          VERSION=$(cat ./VERSION)
          DOCKER_BUILDKIT=1 docker build . --build-arg BUILD_VERSION=$VERSION --tag image --file ./Dockerfile --target prod --progress=plain --secret id=npmrc,src=$HOME/.npmrc

      - name: Log into registry
        run: docker login -u="${{ secrets.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}" ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Push image
        id: push-image
        run: |
          VERSION=$(cat ./VERSION)
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            IMAGE_TAG=$TAG_PREFIX$VERSION-${GITHUB_SHA::7}
          else
            IMAGE_TAG=$TAG_PREFIX$VERSION
          fi

          IMAGE_ID=${{ secrets.DOCKER_REGISTRY_URL }}/$REPO_NAME
          IMAGE_FULL_NAME=$IMAGE_ID:$IMAGE_TAG
          echo VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_TAG=$IMAGE_TAG
          echo IMAGE_FULL_NAME=$IMAGE_FULL_NAME

          docker tag image $IMAGE_FULL_NAME
          docker push $IMAGE_FULL_NAME
          echo "::set-output name=RELEASED_VERSION::$VERSION"
          echo "::set-output name=RELEASED_IMAGE::$IMAGE_FULL_NAME"

      - name: Push tags
        if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: v${{ steps.push-image.outputs.RELEASED_VERSION }}
          message: 'v${{ steps.push-image.outputs.RELEASED_VERSION }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout latest changes
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install
        working-directory: ./deploy

      - name: GCP Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Pulumi preview changes
        if: ${{ github.event_name == 'pull_request' }}
        uses: pulumi/actions@v3
        with:
          work-dir: ./deploy
          command: preview
          stack-name: proxima-one/web-services
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          IMAGE_NAME: ${{needs.build.outputs.releasedImage}}

      - name: Pulumi apply changes
        if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
        uses: pulumi/actions@v3
        with:
          work-dir: ./deploy
          command: up
          stack-name: proxima-one/web-services
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          IMAGE_NAME: ${{needs.build.outputs.releasedImage}}
